.row {
	display: flex;
	flex-wrap: wrap;
	margin-right: -$gap * 0.5;
	margin-left: -$gap * 0.5;
	align-items: stretch;
}

.col,
.col-auto {
	@include makeColumnReady;
}

@for $i from 1 through $gridColumns {
	.col-#{$i} {
		@include makeColumnReady;
	}
}

.col {
	@include makeColumnEq;
}

.col-auto {
	@include makeColumnAuto;
}

@for $i from 1 through $gridColumns {
	.col-#{$i} {
		@include makeColumn($i);
	}
}

@include mediaUp(sm) {
	.sm\:col {
		@include makeColumnEq;
	}
	.sm\:col-auto {
		@include makeColumnAuto;
	}

	@for $i from 1 through $gridColumns {
		.sm\:col-#{$i} {
			@include makeColumnReady;
			@include makeColumn($i);
		}
	}
}

@include mediaUp(md) {
	.md\:col {
		@include makeColumnEq;
	}
	.md\:col-auto {
		@include makeColumnAuto;
	}

	@for $i from 1 through $gridColumns {
		.md\:col-#{$i} {
			@include makeColumnReady;
			@include makeColumn($i);
		}
	}
}

@include mediaUp(lg) {
	.lg\:col {
		@include makeColumnEq;
	}
	.lg\:col-auto {
		@include makeColumnAuto;
	}

	@for $i from 1 through $gridColumns {
		.lg\:col-#{$i} {
			@include makeColumnReady;
			@include makeColumn($i);
		}
	}
}

@include mediaUp(xl) {
	.xl\:col {
		@include makeColumnEq;
	}
	.xl\:col-auto {
		@include makeColumnAuto;
	}

	@for $i from 1 through $gridColumns {
		.xl\:col-#{$i} {
			@include makeColumnReady;
			@include makeColumn($i);
		}
	}
}

.row.gap-0 {
	margin-left: 0;
	margin-right: 0;
	min-width: 100%;

	> * {
		padding-right: 0;
		padding-left: 0;
	}
}

.row.gap-xxs {
	--gap: $gap-xxs;

	/* min-width: calc(100% + #{$gap-xxs}); */
	margin-left: - $gap-xxs * 0.5;
	margin-right: - $gap-xxs * 0.5;

	>* {
		padding-right: $gap-xxs * 0.5;
		padding-left: $gap-xxs * 0.5;
	}
}

.row.gap-xs {
	--gap: $gap-xs;

	/* min-width: calc(100% + #{$gap-xs}); */
	margin-left: - $gap-xs * 0.5;
	margin-right: - $gap-xs * 0.5;

	>* {
		padding-right: $gap-xs * 0.5;
		padding-left: $gap-xs * 0.5;
	}
}

.row.gap-sm {
	--gap: $gap-sm;

	/* min-width: calc(100% + #{$gap-sm}); */
	margin-left: - $gap-sm * 0.5;
	margin-right: - $gap-sm * 0.5;

	>* {
		padding-right: $gap-sm * 0.5;
		padding-left: $gap-sm * 0.5;
	}
}

.row.gap-lg {
	--gap: $gap-lg;

	/* min-width: calc(100% + #{$gap-lg}); */
	margin-left: - $gap-lg * 0.5;
	margin-right: - $gap-lg * 0.5;

	>* {
		padding-right: $gap-lg * 0.5;
		padding-left: $gap-lg * 0.5;
	}
}

.grid > .row {
	margin-top: -$gap * 0.5;
	margin-bottom: -$gap * 0.5;
}

.grid > .row > * {
	padding-top: $gap * 0.5;
	padding-bottom: $gap * 0.5;
}

.grid > .row.gap-sm {
	margin-top: -$gap-sm * 0.5;
	margin-bottom: -$gap-sm * 0.5;
}

.grid > .row.gap-sm > * {
	padding-top: $gap-sm * 0.5;
	padding-bottom: $gap-sm * 0.5;
}

.grid > .row.gap-xs {
	margin-top: -$gap-xs * 0.5;
	margin-bottom: -$gap-xs * 0.5;
}

.grid > .row.gap-xs > * {
	padding-top: $gap-xs * 0.5;
	padding-bottom: $gap-xs * 0.5;
}

.grid > .row.gap-xxs {
	margin-top: -$gap-xxs * 0.5;
	margin-bottom: -$gap-xxs * 0.5;
}

.grid > .row.gap-xxs > * {
	padding-top: $gap-xxs * 0.5;
	padding-bottom: $gap-xxs * 0.5;
}


.grid > .row.gap-lg {
	margin-top: -$gap-lg * 0.5;
	margin-bottom: -$gap-lg * 0.5;
}

.grid > .row.gap-lg > * {
	padding-top: $gap-lg * 0.5;
	padding-bottom: $gap-lg * 0.5;
}
